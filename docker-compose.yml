### 启动所有服务    docker-compose up -d 
### 启动一个服务    docker-compose up -d centos7.9
### 重启一个服务    docker restart centos7.9
### 进入这个容器    docker exec -it centos7.9 /bin/bash
### 查看启动日志    docker logs centos7.9
### 关闭容器        docker stop centos7.9
### 再次原配置启动  docker start centos7.9


version: '3'  #docker-compose版本

services: #服务列表
############################################################
  centos:
    image: centos:7.9.2009
    container_name: centos
    tty: true # 模拟一个伪终端，防止退出
    deploy:
      #replicas: 3
      resources: 
        limits:
          cpus: "0.5"
          memory: 4096M
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./centos7.9/data:/data
      - ./centos7.9/home:/home:ro
############################################################
  nginx:
    image: nginx:latest
    restart: always
    hostname: nginx
    container_name: nginx
    privileged: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf/:/etc/nginx/                   # 配置文件
      - ./nginx/cert/:/etc/cert/                    # ssl证书
      - ./nginx/www/:/usr/share/nginx/html/         # 默认显示的index网页
      - ./nginx/logs/:/var/log/nginx/               # 日志文件
    environment:
      TZ: Asia/Shanghai
############################################################
  zlmediakit: #docker run -id -p 1935:1935 -p 13222:80 -p 13443:443 -p 554:554 -p 10000:10000 -p 10000:10000/udp -p 8000:8000/udp -p 30000-30500:30000-30500 -p 30000-30500:30000-30500/udp --name zlmediakit --env MODE=standalone -e TZ="Asia/Shanghai" zlmediakit/zlmediakit:master
    image: zlmediakit/zlmediakit:master
    container_name: zlmediakit
    #restart: always
    ports:
      - "1935:1935"
      - "13222:80"
      - "13443:443"
      - "554:554"
      - "10000:10000"
      - "10000:10000/udp"
      - "8000:8000/udp"
      - "30000-30500:30000-30500"
      - "30000-30500:30000-30500/udp"
    environment:
      MODE: standalone
      TZ: Asia/Shanghai
    #volumes:
    #  - D:/develop/workspace/docker/zlmediakit:/opt/media
############################################################
  rabbitmq: #docker run -d --hostname my-rabbit --name rabbit -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 -p 25672:25672 -p 61613:61613 -p 1883:1883 rabbitmq:management
    image: rabbitmq:management
    container_name: rabbitmq
    #restart: always
    deploy:
      #replicas: 3
      resources: 
        limits:
          cpus: "2.00"
          memory: 1G
    ports:
      - "15672:15672"
      - "5672:5672"
      - "25672:25672"
      - "61613:61613"
      - "1883:1883"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      TZ: Asia/Shanghai
    
############################################################
  jobmanager: 
    image: flink:latest
    container_name: flink-jobmanager
    expose:
      - "6123"
    ports: 
      - 13211:8081
    command: jobmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      TZ: Asia/Shanghai   
############################################################
  taskmanager: 
    image: flink:latest
    container_name: flink-taskmanager 
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    ports: 
      - 13212:8082
    command: taskmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      TZ: Asia/Shanghai 

############################################################
  mysql8.0:
    image: mysql:8.0
    container_name: mysql8.0
    privileged: true
    ports:
        - 13311:3306
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: "Root@1234"
      MYSQL_USER_NAME: "hmntech"
      MYSQL_USER_PASSWORD: "Marine.123"
      MYSQL_DATABASE: "test"
    volumes:
      - ./mysql8.0/data:/var/lib/mysql
      - ./mysql8.0/config:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password

############################################################
  mysql5.7:
    image: mysql:5.7
    container_name: mysql5.7
    privileged: true
    ports:
        - 13312:3306
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: "Root@1234"
      MYSQL_USER_NAME: "hmntech"
      MYSQL_USER_PASSWORD: "Marine.123"
      MYSQL_DATABASE: "test"
    # 将安装文件映射到容器中去
    volumes:
      - ./mysql5.7/data:/var/lib/mysql
      - ./mysql5.7/config:/etc/mysql/conf.d
     # - /home/environment/mysql/sql:/docker-entrypoint-initdb.d/
     # - /home/environment/mysql/log:/var/log/mysql
    command: --default-authentication-plugin=mysql_native_password #解决外部无法访问
############################################################
  redis:
    image: redis:latest
    container_name: redis
    ports:
        - 6379:6379
    environment:
      TZ: Asia/Shanghai 
    command: redis-server --requirepass Marine.123
############################################################
  xxl-job-admin:
    image: xxl-job-admin:2.3.0
    container_name: xxl-job-admin
    depends_on:
        - mysql5.7
    ports:
        - 13316:8080
    environment:
      TZ: Asia/Shanghai 
      PARAMS: --spring.datasource.url=jdbc:mysql://10.101.59.236:13312/xxl_job?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true --spring.datasource.username=root --spring.datasource.password=Root@1234 --spring.datasource.driver-class-name=com.mysql.jdbc.Driver
    volumes:
      - ./xxl-job/data/applogs:/data/applogs

############################################################
  nacos:
    image: nacos:v2.1.0-slim
    container_name: nacos
    restart: always
    privileged: true
    depends_on:
        - mysql5.7
    ports:
        - 8848:8848 
        - 9848:9848 
        - 9849:9849 
    environment:
      MYSQL_SERVICE_HOST: "10.101.59.236"
      MYSQL_SERVICE_PORT: "13312"
      MYSQL_SERVICE_USER: "root"
      MYSQL_SERVICE_PASSWORD: "Root@1234"
      MYSQL_SERVICE_DB_NAME: "nacos_config"
      NACOS_SERVER_PORT: "8848"
      PREFER_HOST_MODE: "hostname"
      SPRING_DATASOURCE_PLATFORM: "mysql"
      MODE: standalone
    volumes:
        - ./nacos/logs:/home/nacos/logs
############################################################
  minio:
    image: minio:latest
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: Marine.123
    volumes:
      - ./minio/data:/data
    command: server --console-address ':9001' -address ":9000"   /data

############################################################
############################################################
############################################################
############################################################
############################################################
############################################################
############################################################